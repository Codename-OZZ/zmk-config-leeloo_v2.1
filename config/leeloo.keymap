/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// Layers

#define QW_M    0       // Main
#define QW_L    1       // Lower
#define QW_R    2       // Raise
#define QC_F    3       // Firmware

// Short versions

#define WIN_SC  LG(LS(S))
#define BT0     BT_SEL 0
#define BT1     BT_SEL 1
#define BT2     BT_SEL 2
#define BT3     BT_SEL 3
#define BT4     BT_SEL 4
#define BOOTLDR     &bootloader
#define VOLUP   C_VOL_UP
#define VOLDN   C_VOL_DN
#define VOLMT   C_MUTE
#define RGBON   &rgb_ug RGB_ON
#define RGBOFF  &rgb_ug RGB_OFF
#define RGBTOG  &rgb_ug RGB_TOG
#define RGBHUI  &rgb_ug RGB_HUI
#define RGBHUD  &rgb_ug RGB_HUD
#define RGBSAI  &rgb_ug RGB_SAI
#define RGBSAD  &rgb_ug RGB_SAD
#define RGBBRI  &rgb_ug RGB_BRI
#define RGBBRD  &rgb_ug RGB_BRD
#define RGBEFF  &rgb_ug RGB_EFF

/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays
 */

nice_view_spi: &spi0 { cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_win_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none  &none  &none  &none            &none                         &none           &none            &none  &none  &none  &none
&none  &none  &none  &none  &none            &none                         &none           &none            &none  &none  &none  &none
&none  &none  &none  &none  &rgb_ug RGB_TOG  &rgb_ug RGB_ON                &rgb_ug RGB_ON  &rgb_ug RGB_TOG  &none  &none  &none  &none
&none  &none  &none  &none  &none            &none           &none  &none  &none           &none            &none  &none  &none  &none
                     &none  &none            &none           &none  &none  &none           &none            &none
            >;
        };
    };
};
